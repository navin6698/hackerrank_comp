Program link:
https://www.hackerrank.com/contests/101hack43/challenges/max-min-difference
program:
Consider a sequence of  integers, . We want to delete exactly one element, , such that the difference between the smallest and largest elements (i.e., ) in the sequence is minimal. Then print the minimal absolute difference between the maximal and minimal elements on a new line.

Input Format

The first line contains an integer, , denoting the number of integers in the sequence. 
The second line contains  space-separated integers describing the respective values of .

Constraints

For  of the test cases 
For  of the test cases ，
Output Format

Print a single integer denoting the minimal absolute difference between  and  after removing exactly one element.

Sample Input 0

5
7 4 3 1 3
Sample Output 0

3
Explanation 0

If we delete ，we get  and . We then print their minimal difference, , as our answer.

Sample Input 1

10
5 4 0 8 3 8 4 1 1 8
Sample Output 1

7
Explanation 1

If we delete ，we get  and . We then print their minimal difference, , as our answer.
Code:
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
       Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        Arrays.sort(a);        

        //if first 2 min are equal then remove max element
        if(a[0]==a[1]){
            System.out.print(a[n-2]-a[0]);
        }
        //if last 2 max are equal remove first min element
        else if(a[n-2]==a[n-1]){
            System.out.println(a[n-1]-a[1]);
        }
        else
        {   
            if((a[n-1]-a[1])<(a[n-2]-a[0])){
                System.out.println(a[n-1]-a[1]);
            }
            else {
                 System.out.println(a[n-2]-a[0]);
            }
               
        }
    }
}
